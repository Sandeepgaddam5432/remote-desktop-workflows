name: macOS VNC Desktop - Remote Access

on:
  workflow_dispatch:
    inputs:
      password:
        description: 'VNC Password (default: P@ssw0rd123!)'
        required: false
        default: 'P@ssw0rd123!'
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/macos-vnc.yml'

jobs:
  macos-desktop:
    runs-on: macos-latest
    timeout-minutes: 360

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Cloudflared
        run: |
          brew install cloudflare/cloudflare/cloudflared
          echo "‚úÖ Cloudflared Installed!"

      - name: Enable macOS Screen Sharing
        run: |
          # Enable screen sharing and VNC
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate -configure -access -on -restart -agent -privs -all -allowAccessFor -allUsers
          
          # Enable VNC legacy mode
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure -clientopts -setvnclegacy -vnclegacy yes
          
          echo "‚úÖ Screen Sharing Enabled!"

      - name: Set VNC Password
        run: |
          PASSWORD="${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
          
          # Set VNC password using kickstart
          echo "$PASSWORD" | sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure -clientopts -setvncpw -vncpw "$PASSWORD"
          
          echo "‚úÖ VNC Password Set!"

      - name: Configure Login Window Access
        run: |
          # Allow VNC access at login window
          sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowLaunchesRelaunchApps -bool false
          sudo defaults write /Library/Preferences/com.apple.RemoteManagement.plist VNCAlwaysStartOnConsole -bool true
          
          # Disable screen lock and sleep
          sudo pmset -a displaysleep 0
          sudo pmset -a sleep 0
          sudo pmset -a disablesleep 1
          
          echo "‚úÖ Login Window VNC Access Configured!"

      - name: Create and Login Test User
        run: |
          # Create a simple user for VNC session
          sudo sysadminctl -addUser vncuser -fullName "VNC User" -password "P@ssw0rd123!" -admin
          
          # Enable automatic login
          sudo defaults write /Library/Preferences/com.apple.loginwindow autoLoginUser vncuser
          
          echo "‚úÖ VNC User Created and Auto-login Enabled!"

      - name: Restart Screen Sharing Service
        run: |
          # Restart the screen sharing service
          sudo launchctl unload /System/Library/LaunchDaemons/com.apple.screensharing.plist 2>/dev/null || true
          sleep 2
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
          
          echo "‚úÖ Screen Sharing Service Restarted!"

      - name: System Information
        run: |
          echo "üìä SYSTEM INFORMATION:"
          echo "   macOS Version: $(sw_vers -productVersion)"
          echo "   Architecture: $(uname -m)"
          echo "   Hostname: $(hostname)"
          echo "   Current User: $(whoami)"
          echo "   VNC Status: $(sudo lsof -i :5900 | head -5 || echo 'VNC not running yet')"

      - name: Start Cloudflare Tunnel
        run: |
          echo "============================================"
          echo "üöÄ macOS VNC - CLOUDFLARE TUNNEL"
          echo "============================================"
          
          # Start tunnel in background
          cloudflared tunnel --url tcp://localhost:5900 > tunnel.log 2>&1 &
          
          # Wait for tunnel to establish
          sleep 20
          
          # Extract tunnel URL
          TUNNEL_URL=$(cat tunnel.log | grep -o 'https://[^[:space:]]*trycloudflare.com' | head -1)
          
          if [ -n "$TUNNEL_URL" ]; then
            echo "üåê TUNNEL URL: $TUNNEL_URL"
          else
            echo "‚ùå Failed to get tunnel URL. Logs:"
            cat tunnel.log
          fi
          
          echo ""
          echo "üìã CONNECTION DETAILS:"
          echo "   PASSWORD: ${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
          echo "   OS: macOS $(sw_vers -productVersion)"
          echo "   User: vncuser (auto-login enabled)"
          echo "============================================"
          echo ""
          echo "üîß VNC CLIENT SETUP:"
          echo "   1. Copy tunnel URL above"
          echo "   2. Use RealVNC Viewer or similar"
          echo "   3. Connect to: [tunnel-url]:5900"
          echo "   4. Password: ${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
          echo "============================================"

      - name: Keep Session Active
        run: |
          echo "‚è≥ Keeping session active for 6 hours..."
          echo "üí° Cancel workflow manually to stop early"
          
          for i in {1..360}; do
            sleep 60
            echo "‚úì Active - $(date '+%H:%M:%S') - $i/360 minutes"
            
            # Check tunnel every 30 minutes
            if [ $((i % 30)) -eq 0 ]; then
              if pgrep -f cloudflared > /dev/null; then
                echo "‚úÖ Tunnel running"
              else
                echo "‚ö†Ô∏è Restarting tunnel..."
                cloudflared tunnel --url tcp://localhost:5900 > tunnel.log 2>&1 &
                sleep 10
                cat tunnel.log | grep -o 'https://[^[:space:]]*trycloudflare.com' | head -1
              fi
            fi
          done
          
          echo "‚è∞ Session completed - 6 hours elapsed"