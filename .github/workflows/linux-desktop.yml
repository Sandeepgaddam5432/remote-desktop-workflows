name: LINUX DESKTOP - FAST VNC (XFCE + TigerVNC)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Setup Cloudflared
        uses: AnimMouse/setup-cloudflared@v2

      - name: Install XFCE + TigerVNC (lightweight)
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            xfce4 xfce4-session xfwm4 xfce4-terminal tigervnc-standalone-server autocutsel
          echo "✅ XFCE + TigerVNC installed"

      - name: Configure TigerVNC
        run: |
          mkdir -p $HOME/.vnc
          echo "P@ssw0rd123!" | vncpasswd -f > $HOME/.vnc/passwd
          chmod 600 $HOME/.vnc/passwd

          cat > $HOME/.vnc/xstartup <<'EOF'
          #!/bin/sh
          export PATH=/usr/bin:/usr/sbin
          unset SESSION_MANAGER
          unset DBUS_SESSION_BUS_ADDRESS
          [ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
          autocutsel -fork
          exec startxfce4
          EOF
          chmod +x $HOME/.vnc/xstartup
          touch $HOME/.Xauthority
          echo "✅ VNC password and xstartup configured (exec startxfce4)"

      - name: Start VNC Server on :1 (5901)
        run: |
          vncserver -kill :1 >/dev/null 2>&1 || true
          vncserver :1 -geometry 1366x768 -depth 24 -localhost no
          echo "✅ VNC up on :1 (tcp/5901)"

      - name: Start TryCloudflare Tunnel (mirror macOS behavior)
        run: |
          # Mirror macOS: quick tunnel that prints a trycloudflare URL
          # Use http2 path; retry; fallback dummy cert for strict builds
          cloudflared tunnel --no-autoupdate --protocol http2 --loglevel error --url tcp://localhost:5901 > tunnel.log 2>&1 &
          for i in {1..30}; do
            sleep 1
            TUN=$(grep -o 'https://[^[:space:]]*trycloudflare.com' tunnel.log | head -1 || true)
            if [ -n "$TUN" ]; then echo "🌐 $TUN"; break; fi
          done
          if [ -z "$TUN" ]; then
            mkdir -p ~/.cloudflared
            : > ~/.cloudflared/cert.pem
            cloudflared tunnel --no-autoupdate --protocol http2 --loglevel error --url tcp://localhost:5901 > tunnel.log 2>&1 &
            for i in {1..20}; do
              sleep 1
              TUN=$(grep -o 'https://[^[:space:]]*trycloudflare.com' tunnel.log | head -1 || true)
              if [ -n "$TUN" ]; then echo "🌐 $TUN"; break; fi
            done
          fi
          if [ -z "$TUN" ]; then
            echo "❌ Tunnel URL not found"; tail -100 tunnel.log; exit 1
          fi
          echo "$TUN" > tunnel_url.txt
          echo "✅ TryCloudflare tunnel ready"

      - name: Show Connect Info (+ local access cmd)
        run: |
          TUN=$(cat tunnel_url.txt)
          echo "-------------------------------------------"
          echo "VNC Address (direct): ${TUN#https://}:5901"
          echo "Local proxy command : cloudflared access tcp --hostname ${TUN#https://} --url localhost:5901"
          echo "Password            : P@ssw0rd123!"
          echo "Desktop             : XFCE"
          echo "-------------------------------------------"

      - name: Keep alive 6 hours
        run: |
          for i in {1..360}; do
            echo "✓ Alive $i/360"
            sleep 60
          done
